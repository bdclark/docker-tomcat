<?xml version='1.0' encoding='utf-8'?>
<!-- Dynamically generated by Consul-Template -->
{{ $config := env "TOMCAT_PREFIX" }}

<Server port="8005" shutdown="SHUTDOWN">
  <Listener className="org.apache.catalina.startup.VersionLoggerListener" />
  <!-- Security listener. Documentation at /docs/config/listeners.html
  <Listener className="org.apache.catalina.security.SecurityListener" />
  -->
  <!--APR library loader. Documentation at /docs/apr.html -->
  <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
  <!--Initialize Jasper prior to webapps are loaded. Documentation at /docs/jasper-howto.html -->
  <Listener className="org.apache.catalina.core.JasperListener" />
  <!-- Prevent memory leaks due to use of particular java/javax APIs-->
  <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
  <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
  <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />

  <!-- Global JNDI resources
       Documentation at /docs/jndi-resources-howto.html
  -->
  <GlobalNamingResources>
    <!-- Editable user database that can also be used by
         UserDatabaseRealm to authenticate users
    -->
    <Resource name="UserDatabase" auth="Container"
              type="org.apache.catalina.UserDatabase"
              description="User database that can be updated and saved"
              factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
              pathname="conf/tomcat-users.xml" />
  </GlobalNamingResources>

  <!-- A "Service" is a collection of one or more "Connectors" that share
       a single "Container" Note:  A "Service" is not itself a "Container",
       so you may not define subcomponents such as "Valves" at this level.
       Documentation at /docs/config/service.html
   -->
  <Service name="Catalina">

{{- $executor := printf "%s/executor/" $config }}{{ if ls $executor }}
    <!-- Define a shared executor (named thread pool) -->
    <Executor {{ range ls $executor }}{{ .Key }}="{{ .Value }}" {{ end }}/>
{{ end }}

{{- $http_connector := printf "%s/http_connector" $config }}
    <!-- Define an HTTP connector on port 8080 -->
    <Connector port="8080"{{ range ls $http_connector }}{{ if ne .Key "port" }}
               {{ .Key }}="{{ .Value }}"{{ end }}{{ end }} />

    <!-- Define an AJP 1.3 Connector on port 8009 -->
    <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />

    <Engine name="Catalina" defaultHost="localhost">

{{- $engine_valves := printf "%s/engine_valves/" $config }}
{{ range $key, $pairs := tree $engine_valves | byKey }}
      <!-- Define engine valve {{ $key }} -->
      <Valve className="{{ $key }}"{{range $pair := $pairs}}
             {{.Key}}="{{.Value}}" {{ end }}/>
{{ end }}

      <!-- Use the LockOutRealm to prevent attempts to guess user passwords
           via a brute-force attack -->
      <Realm className="org.apache.catalina.realm.LockOutRealm">
        <!-- This Realm uses the UserDatabase configured in the global JNDI
             resources under the key "UserDatabase".  Any edits
             that are performed against this UserDatabase are immediately
             available for use by the Realm.  -->
        <Realm className="org.apache.catalina.realm.UserDatabaseRealm"
               resourceName="UserDatabase" />
      </Realm>

      <Host name="localhost" appBase="webapps"
            unpackWARs="true" autoDeploy="false">

{{- $host_valves := printf "%s/host_valves/" $config }}
{{ range $key, $pairs := tree $host_valves | byKey }}
        <!-- Define host valve {{ $key }} -->
        <Valve className="{{ $key }}"{{range $pair := $pairs}}
               {{.Key}}="{{.Value}}" {{ end }}/>
{{ end }}
        <Valve className="org.apache.catalina.valves.AccessLogValve"
               directory="logs"
               prefix="localhost_access_log."
               suffix=".log"
               pattern="combined" />

      </Host>
    </Engine>
  </Service>
</Server>
